// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proyecto_Vacuna1;

namespace Proyecto_Vacuna1.Migrations
{
    [DbContext(typeof(ProyectoContext))]
    [Migration("20210628092511_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Proyecto_Vacuna.model.Cabin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<int?>("employeeid")
                        .HasColumnType("int");

                    b.Property<int?>("index_cabin_1id")
                        .HasColumnType("int");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("employeeid");

                    b.HasIndex("index_cabin_1id");

                    b.ToTable("Cabins");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.DateVaccine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Cabin1id")
                        .HasColumnType("int");

                    b.Property<int?>("Pacientid")
                        .HasColumnType("int");

                    b.Property<int?>("Typeid")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime");

                    b.Property<int?>("dosisid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Cabin1id");

                    b.HasIndex("Pacientid");

                    b.HasIndex("Typeid");

                    b.HasIndex("dosisid");

                    b.ToTable("DateVaccines");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.DayVaccine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Cabinid")
                        .HasColumnType("int");

                    b.Property<int?>("Dosisid")
                        .HasColumnType("int");

                    b.Property<int?>("Pacientid")
                        .HasColumnType("int");

                    b.Property<int?>("Sideid")
                        .HasColumnType("int");

                    b.Property<int?>("TypeVaccineid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Cabinid");

                    b.HasIndex("Dosisid");

                    b.HasIndex("Pacientid");

                    b.HasIndex("Sideid");

                    b.HasIndex("TypeVaccineid");

                    b.ToTable("DayVaccines");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Disease", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("disease")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Diseases");

                    b.HasData(
                        new
                        {
                            id = 1,
                            disease = "Hipertension arterial"
                        },
                        new
                        {
                            id = 2,
                            disease = "Diabetes"
                        },
                        new
                        {
                            id = 3,
                            disease = "Sobrepeso"
                        },
                        new
                        {
                            id = 4,
                            disease = "Dislipidemia"
                        },
                        new
                        {
                            id = 5,
                            disease = "Enfermedad Renal Cronica"
                        },
                        new
                        {
                            id = 6,
                            disease = "Ninguna"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Dosi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("dosis")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Dosis");

                    b.HasData(
                        new
                        {
                            id = 1,
                            dosis = "Primera dosis"
                        },
                        new
                        {
                            id = 2,
                            dosis = "Segunda dosis"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("TipoId")
                        .HasColumnType("int");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("user")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("TipoId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Index_cabin", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("index")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("Index_Cabins");

                    b.HasData(
                        new
                        {
                            id = 1,
                            index = "Primera cabina"
                        },
                        new
                        {
                            id = 2,
                            index = "Segunda cabina"
                        },
                        new
                        {
                            id = 3,
                            index = "Tercera cabina"
                        },
                        new
                        {
                            id = 4,
                            index = "Cuarta cabina"
                        },
                        new
                        {
                            id = 5,
                            index = "Quinta cabina"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.InstitutionObjective", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Institution")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("InstitutionObjectives");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Institution = "Adultos mayores de 60 años"
                        },
                        new
                        {
                            id = 2,
                            Institution = "Personal del sistema integrado de Salud"
                        },
                        new
                        {
                            id = 3,
                            Institution = "Encargados de la seguridad nacional"
                        },
                        new
                        {
                            id = 4,
                            Institution = "Personas mayores de 18 años con enfermadades no transmisibles o alguna discapacidad"
                        },
                        new
                        {
                            id = 5,
                            Institution = "Personal del gobierno central"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Pacient", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DUI")
                        .HasColumnType("text");

                    b.Property<int?>("Diseaseid")
                        .HasColumnType("int");

                    b.Property<int?>("Institutionid")
                        .HasColumnType("int");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phone")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("Diseaseid");

                    b.HasIndex("Institutionid");

                    b.ToTable("Pacients");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.SideEffect", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("side")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("SideEffects");

                    b.HasData(
                        new
                        {
                            id = 1,
                            side = "Dolor y/o irritacion en el area de la inyeccion"
                        },
                        new
                        {
                            id = 2,
                            side = "Enrojecimiento en el area de la inyeccion"
                        },
                        new
                        {
                            id = 3,
                            side = "Fatiga"
                        },
                        new
                        {
                            id = 4,
                            side = "Dolor de cabeza"
                        },
                        new
                        {
                            id = 5,
                            side = "Fatiga"
                        },
                        new
                        {
                            id = 6,
                            side = "Mialgia"
                        },
                        new
                        {
                            id = 7,
                            side = "Otro"
                        },
                        new
                        {
                            id = 8,
                            side = "Ninguno"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.TipoEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TipoEmployees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            type = "Enfermero"
                        },
                        new
                        {
                            Id = 2,
                            type = "Doctor"
                        },
                        new
                        {
                            Id = 3,
                            type = "Pasante"
                        },
                        new
                        {
                            Id = 4,
                            type = "Policia"
                        },
                        new
                        {
                            Id = 5,
                            type = "Soldado"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.TypeVaccine", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("type_Vaccine")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("TypeVaccines");

                    b.HasData(
                        new
                        {
                            id = 1,
                            type_Vaccine = "AstraZeneca"
                        },
                        new
                        {
                            id = 2,
                            type_Vaccine = "Sinovac"
                        },
                        new
                        {
                            id = 3,
                            type_Vaccine = "Phyzen"
                        });
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Cabin", b =>
                {
                    b.HasOne("Proyecto_Vacuna.model.Employee", "employee")
                        .WithMany()
                        .HasForeignKey("employeeid");

                    b.HasOne("Proyecto_Vacuna.model.Index_cabin", "index_cabin_1")
                        .WithMany()
                        .HasForeignKey("index_cabin_1id");

                    b.Navigation("employee");

                    b.Navigation("index_cabin_1");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.DateVaccine", b =>
                {
                    b.HasOne("Proyecto_Vacuna.model.Index_cabin", "Cabin1")
                        .WithMany()
                        .HasForeignKey("Cabin1id");

                    b.HasOne("Proyecto_Vacuna.model.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("Pacientid");

                    b.HasOne("Proyecto_Vacuna.model.TypeVaccine", "Type")
                        .WithMany()
                        .HasForeignKey("Typeid");

                    b.HasOne("Proyecto_Vacuna.model.Dosi", "dosis")
                        .WithMany()
                        .HasForeignKey("dosisid");

                    b.Navigation("Cabin1");

                    b.Navigation("dosis");

                    b.Navigation("Pacient");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.DayVaccine", b =>
                {
                    b.HasOne("Proyecto_Vacuna.model.Index_cabin", "Cabin")
                        .WithMany()
                        .HasForeignKey("Cabinid");

                    b.HasOne("Proyecto_Vacuna.model.Dosi", "Dosis")
                        .WithMany()
                        .HasForeignKey("Dosisid");

                    b.HasOne("Proyecto_Vacuna.model.Pacient", "Pacient")
                        .WithMany()
                        .HasForeignKey("Pacientid");

                    b.HasOne("Proyecto_Vacuna.model.SideEffect", "Side")
                        .WithMany()
                        .HasForeignKey("Sideid");

                    b.HasOne("Proyecto_Vacuna.model.TypeVaccine", "TypeVaccine")
                        .WithMany()
                        .HasForeignKey("TypeVaccineid");

                    b.Navigation("Cabin");

                    b.Navigation("Dosis");

                    b.Navigation("Pacient");

                    b.Navigation("Side");

                    b.Navigation("TypeVaccine");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Employee", b =>
                {
                    b.HasOne("Proyecto_Vacuna.model.TipoEmployee", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId");

                    b.Navigation("Tipo");
                });

            modelBuilder.Entity("Proyecto_Vacuna.model.Pacient", b =>
                {
                    b.HasOne("Proyecto_Vacuna.model.Disease", "Disease")
                        .WithMany()
                        .HasForeignKey("Diseaseid");

                    b.HasOne("Proyecto_Vacuna.model.InstitutionObjective", "Institution")
                        .WithMany()
                        .HasForeignKey("Institutionid");

                    b.Navigation("Disease");

                    b.Navigation("Institution");
                });
#pragma warning restore 612, 618
        }
    }
}
